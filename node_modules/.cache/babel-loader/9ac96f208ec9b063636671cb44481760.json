{"remainingRequest":"/Users/daniel/codeclan_work/JavascriptProject/jsad_project/client/node_modules/babel-loader/lib/index.js!/Users/daniel/codeclan_work/JavascriptProject/jsad_project/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/daniel/codeclan_work/JavascriptProject/jsad_project/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daniel/codeclan_work/JavascriptProject/jsad_project/client/src/components/PlanetsGrid.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daniel/codeclan_work/JavascriptProject/jsad_project/client/src/components/PlanetsGrid.vue","mtime":1592418496648},{"path":"/Users/daniel/codeclan_work/JavascriptProject/jsad_project/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daniel/codeclan_work/JavascriptProject/jsad_project/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/daniel/codeclan_work/JavascriptProject/jsad_project/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daniel/codeclan_work/JavascriptProject/jsad_project/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFBsYW5ldFNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvUGxhbmV0U2VydmljZS5qcyc7CmltcG9ydCBHcmlkSXRlbSBmcm9tICcuL1BsYW5ldEdyaWRJdGVtLnZ1ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAncGxhbmV0cy1ncmlkJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcGxhbmV0czogW10KICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICAnZ3JpZC1pdGVtJzogR3JpZEl0ZW0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmZldGNoRGF0YSgpOwogIH0sCiAgbWV0aG9kczogewogICAgZmV0Y2hEYXRhOiBmdW5jdGlvbiBmZXRjaERhdGEoKSB7CiAgICAgIC8vIFBsYW5ldFNlcnZpY2UuZ2V0UGxhbmV0cygpICAvLyBSZXBsYWNlZCB0aGUgZGF0YWJhc2UgZmV0Y2ggd2l0aCBoYXJkY29kZWQgdmFsdWVzIHVudGlsIGRhdGFiYXNlIGlzIHNldCB1cCBvbiB0aGUgc2VydmVyCiAgICAgIC8vIC50aGVuKHBsYW5ldHMgPT4gdGhpcy5wbGFuZXRzID0gcGxhbmV0cyk7CiAgICAgIHRoaXMucGxhbmV0cyA9IFt7CiAgICAgICAgbmFtZTogIk1lcmN1cnkiLAogICAgICAgIGRpYW1ldGVyOiA0ODc4LAogICAgICAgIGRpc3RhbmNlX2Zyb21fc3VuOiA1Ny45LAogICAgICAgIG51bWJlcl9vZl9tb29uczogMCwKICAgICAgICBkYXlfbGVuZ3RoOiAxNDA4LAogICAgICAgIHdlaWdodDogMC4zOCwKICAgICAgICBpY29uOiAibWVyY3VyeS5wbmciLAogICAgICAgIGRheV9yYXRpbzogMC4yNAogICAgICB9LCB7CiAgICAgICAgbmFtZTogIlZlbnVzIiwKICAgICAgICBkaWFtZXRlcjogMTIxMDQsCiAgICAgICAgZGlzdGFuY2VfZnJvbV9zdW46IDEwOC4yLAogICAgICAgIG51bWJlcl9vZl9tb29uczogMCwKICAgICAgICBkYXlfbGVuZ3RoOiA1ODMyLAogICAgICAgIHdlaWdodDogMC45MSwKICAgICAgICBpY29uOiAidmVudXMucG5nIiwKICAgICAgICBkYXlfcmF0aW86IDAuNjIKICAgICAgfSwgewogICAgICAgIG5hbWU6ICJFYXJ0aCIsCiAgICAgICAgZGlhbWV0ZXI6IDEyNzU2LAogICAgICAgIGRpc3RhbmNlX2Zyb21fc3VuOiAxNDkuNiwKICAgICAgICBudW1iZXJfb2ZfbW9vbnM6IDEsCiAgICAgICAgZGF5X2xlbmd0aDogMjQsCiAgICAgICAgd2VpZ2h0OiAxLAogICAgICAgIGljb246ICJlYXJ0aC5wbmciLAogICAgICAgIGRheV9yYXRpbzogMQogICAgICB9LCB7CiAgICAgICAgbmFtZTogIkx1bmEiLAogICAgICAgIGRpYW1ldGVyOiAzNDc0LAogICAgICAgIGRpc3RhbmNlX2Zyb21fc3VuOiAxNTAsCiAgICAgICAgbnVtYmVyX29mX21vb25zOiAwLAogICAgICAgIGRheV9sZW5ndGg6IDcwOCwKICAgICAgICB3ZWlnaHQ6IDAuMTcsCiAgICAgICAgaWNvbjogImx1bmEucG5nIiwKICAgICAgICBkYXlfcmF0aW86IDEKICAgICAgfSwgewogICAgICAgIG5hbWU6ICJNYXJzIiwKICAgICAgICBkaWFtZXRlcjogNjc4NywKICAgICAgICBkaXN0YW5jZV9mcm9tX3N1bjogMjI3LjksCiAgICAgICAgbnVtYmVyX29mX21vb25zOiAyLAogICAgICAgIGRheV9sZW5ndGg6IDI1LAogICAgICAgIHdlaWdodDogMC4zOCwKICAgICAgICBpY29uOiAibWFycy5wbmciLAogICAgICAgIGRheV9yYXRpbzogMS44OAogICAgICB9LCB7CiAgICAgICAgbmFtZTogIkp1cGl0ZXIiLAogICAgICAgIGRpYW1ldGVyOiAxNDI3OTYsCiAgICAgICAgZGlzdGFuY2VfZnJvbV9zdW46IDc3OC4zLAogICAgICAgIG51bWJlcl9vZl9tb29uczogNjcxLAogICAgICAgIGRheV9sZW5ndGg6IDEwLAogICAgICAgIHdlaWdodDogMi4zNCwKICAgICAgICBpY29uOiAianVwaXRlci5wbmciLAogICAgICAgIGRheV9yYXRpbzogMTIKICAgICAgfSwgewogICAgICAgIG5hbWU6ICJTYXR1cm4iLAogICAgICAgIGRpYW1ldGVyOiAxMjA2NjAsCiAgICAgICAgZGlzdGFuY2VfZnJvbV9zdW46IDE0MjcuMCwKICAgICAgICBudW1iZXJfb2ZfbW9vbnM6IDYyLAogICAgICAgIGRheV9sZW5ndGg6IDExLAogICAgICAgIHdlaWdodDogMS4wNiwKICAgICAgICBpY29uOiAic2F0dXJuLnBuZyIsCiAgICAgICAgZGF5X3JhdGlvOiAyOS41CiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAiVXJhbnVzIiwKICAgICAgICBkaWFtZXRlcjogNTExMTgsCiAgICAgICAgZGlzdGFuY2VfZnJvbV9zdW46IDI4NzEuMCwKICAgICAgICBudW1iZXJfb2ZfbW9vbnM6IDI3LAogICAgICAgIGRheV9sZW5ndGg6IDE3LAogICAgICAgIHdlaWdodDogMC45MiwKICAgICAgICBpY29uOiAidXJhbnVzLnBuZyIsCiAgICAgICAgZGF5X3JhdGlvOiA4NAogICAgICB9LCB7CiAgICAgICAgbmFtZTogIk5lcHR1bmUiLAogICAgICAgIGRpYW1ldGVyOiA0ODYwMCwKICAgICAgICBkaXN0YW5jZV9mcm9tX3N1bjogNDQ5Ny4xLAogICAgICAgIG51bWJlcl9vZl9tb29uczogMTMsCiAgICAgICAgZGF5X2xlbmd0aDogMTYsCiAgICAgICAgd2VpZ2h0OiAxLjE5LAogICAgICAgIGljb246ICJuZXB0dW5lLnBuZyIsCiAgICAgICAgZGF5X3JhdGlvOiAxNjUKICAgICAgfSwgewogICAgICAgIG5hbWU6ICJQbHV0byIsCiAgICAgICAgZGlhbWV0ZXI6IDIyNzQsCiAgICAgICAgZGlzdGFuY2VfZnJvbV9zdW46IDU5MTMuMCwKICAgICAgICBudW1iZXJfb2ZfbW9vbnM6IDQsCiAgICAgICAgZGF5X2xlbmd0aDogMTUzLAogICAgICAgIHdlaWdodDogMC4wNiwKICAgICAgICBpY29uOiAicGx1dG8ucG5nIiwKICAgICAgICBkYXlfcmF0aW86IDI0OAogICAgICB9XTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["PlanetsGrid.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\n\t<div id=\"planetsGrid\">\n\t\t<h1>Pick a planet!</h1>\n       <ul>\n      <grid-item v-for=\"(planet, index) in planets\" :planet=\"planet\" :key=\"index\" v-scroll-to=\"'.detail-container'\"></grid-item>\n    </ul>\n\t</div>\n</template>\n\n<script>\nimport PlanetService from '../services/PlanetService.js';\nimport GridItem from './PlanetGridItem.vue'\n\nexport default {\n  name: 'planets-grid',\n  data() {\n    return {\n      planets: []\n    }\n  },\n  components: {\n      'grid-item': GridItem\n  },\n  mounted() {\n      this.fetchData();\n  },\n  methods: {\n    fetchData(){\n        // PlanetService.getPlanets()  // Replaced the database fetch with hardcoded values until database is set up on the server\n        // .then(planets => this.planets = planets);\n        this.planets = [\n          {name: \"Mercury\", diameter: 4878, distance_from_sun: 57.9, number_of_moons: 0, day_length: 1408, weight: 0.38, icon: \"mercury.png\", day_ratio: 0.24},\n          {name: \"Venus\", diameter: 12104, distance_from_sun: 108.2, number_of_moons: 0, day_length: 5832, weight: 0.91, icon: \"venus.png\", day_ratio: 0.62},\n          {name: \"Earth\", diameter: 12756, distance_from_sun: 149.6, number_of_moons: 1, day_length: 24, weight: 1, icon: \"earth.png\", day_ratio: 1},\n          {name: \"Luna\",  diameter: 3474, distance_from_sun: 150, number_of_moons: 0, day_length: 708, weight: 0.17, icon: \"luna.png\", day_ratio: 1},\n          {name: \"Mars\", diameter: 6787, distance_from_sun: 227.9, number_of_moons: 2, day_length: 25, weight: 0.38, icon: \"mars.png\", day_ratio: 1.88 },\n          {name: \"Jupiter\", diameter: 142796, distance_from_sun: 778.3, number_of_moons: 671, day_length: 10, weight: 2.34, icon: \"jupiter.png\", day_ratio: 12},\n          {name: \"Saturn\", diameter: 120660, distance_from_sun: 1427.0, number_of_moons: 62, day_length: 11, weight: 1.06, icon: \"saturn.png\", day_ratio: 29.5},\n          {name: \"Uranus\", diameter: 51118, distance_from_sun: 2871.0, number_of_moons: 27, day_length: 17, weight: 0.92, icon: \"uranus.png\", day_ratio: 84},\n          {name: \"Neptune\", diameter: 48600, distance_from_sun: 4497.1, number_of_moons: 13, day_length: 16, weight: 1.19, icon: \"neptune.png\", day_ratio: 165},\n          {name: \"Pluto\", diameter: 2274, distance_from_sun: 5913.0, number_of_moons: 4, day_length: 153, weight: 0.06, icon: \"pluto.png\", day_ratio: 248}\n        ];\n    }\n  }\n}\n</script>\n\n\n<style scoped>\n\n#planetsGrid {\n  margin-top: 100px;\n}  \n\nul{\n  display: flex;\n}\n</style>"],"sourceRoot":"src/components"}]}